(self.webpackChunksceelix=self.webpackChunksceelix||[]).push([[3613],{2749:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return m}});var n=a(2122),r=a(9756),i=(a(7294),a(3905)),o={},l="Parameters",s={unversionedId:"Graph Concepts/Parameters",id:"Graph Concepts/Parameters",isDocsHomePage:!1,title:"Parameters",description:"Parameters are the means to control what a node does with (or without) their input entities. They are accessible in the inspector window when a node is selected.",source:"@site/docs/04-Graph Concepts/06-Parameters.md",sourceDirName:"04-Graph Concepts",slug:"/Graph Concepts/Parameters",permalink:"/docs/Graph Concepts/Parameters",editUrl:"https://github.com/Sceelix/Sceelix/edit/master/website/docs/04-Graph Concepts/06-Parameters.md",version:"current",sidebarPosition:6,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Flow",permalink:"/docs/Graph Concepts/Flow"},next:{title:"Node Overview",permalink:"/docs/Nodes/NodeOverview"}},p=[{value:"Types",id:"types",children:[]},{value:"Editors",id:"editors",children:[]},{value:"Expressions",id:"expressions",children:[]},{value:"Graph Parameters",id:"graph-parameters",children:[]}],c={toc:p};function m(e){var t=e.components,o=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"parameters"},"Parameters"),(0,i.kt)("p",null,"Parameters are the means to control what a node does with (or without) their input entities. They are accessible in the inspector window when a node is selected."),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(7302).Z})),(0,i.kt)("h2",{id:"types"},"Types"),(0,i.kt)("p",null,"There are parameters of several ",(0,i.kt)("em",{parentName:"p"},"types")," such as integers, strings, floating-point, file paths, vectors, lists, etc. These are commonly found in most programming languages:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Int"),": A integer number."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Bool"),": A boolean value - either ",(0,i.kt)("em",{parentName:"li"},"true")," or ",(0,i.kt)("em",{parentName:"li"},"false"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Float"),": A floating-point number, with a maximum of 6 decimal case precision."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Double"),": A float-point number, with a maximum of 15 decimal case precision."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"String"),": A textual value, consisting of a string of characters."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"List"),": A composition of any of the basic types above, or of other lists. A list can hold items of the same type (like ","[1,4,6]",") or several types (like ",'[45,"Hello",true,10.0]',"). Lists can be associative, meaning that each list item has a key (like ",'["Name" : "John", "Age" : 20, "Married", false]',")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Object"),": A C# object that contains any of the above types or other objects. Sceelix's native libraries include the following object types:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Vector2"),": An object with float fields X,Y for positioning and direction calculation in 2D space."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Vector3"),": An object with float fields X,Y,Z for positioning and direction calculation in 3D space."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Color"),": An object with byte fields R,G,B,A (all integers in the 0-255 range) that describes a RGB color with Alpha/transparency component.")))),(0,i.kt)("h2",{id:"editors"},"Editors"),(0,i.kt)("p",null,"For the same type of parameters, there are sometimes more than one available ",(0,i.kt)("em",{parentName:"p"},"editor"),". For example, both a textbox and a multi-choice selection box could be used to write text strings."),(0,i.kt)("p",null,"These are the basic parameter ",(0,i.kt)("em",{parentName:"p"},"types"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Attribute")),(0,i.kt)("li",{parentName:"ul"},"compound: A composition of"),(0,i.kt)("li",{parentName:"ul"},"color: A compound value that holds color information, namely Red, Green, Blue and Alpha."),(0,i.kt)("li",{parentName:"ul"},"list"),(0,i.kt)("li",{parentName:"ul"},"object"),(0,i.kt)("li",{parentName:"ul"},"vector2d"),(0,i.kt)("li",{parentName:"ul"},"vector3d")),(0,i.kt)("p",null,"And these are the available ",(0,i.kt)("em",{parentName:"p"},"controls")," that work on the available types:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Int: A numeric spin control for introducing integer values. Produces values of type Int"),(0,i.kt)("li",{parentName:"ul"},"bool: A checkbox control that accepts only integer numbers."),(0,i.kt)("li",{parentName:"ul"},"float: A numeric spin control that accepts floating-point numbers, with a maximum of 6 decimal case precision."),(0,i.kt)("li",{parentName:"ul"},"double"),(0,i.kt)("li",{parentName:"ul"},"string"),(0,i.kt)("li",{parentName:"ul"},"attribute"),(0,i.kt)("li",{parentName:"ul"},"color"),(0,i.kt)("li",{parentName:"ul"},"compound"),(0,i.kt)("li",{parentName:"ul"},"list"),(0,i.kt)("li",{parentName:"ul"},"object"),(0,i.kt)("li",{parentName:"ul"},"optional"),(0,i.kt)("li",{parentName:"ul"},"select"),(0,i.kt)("li",{parentName:"ul"},"choice"),(0,i.kt)("li",{parentName:"ul"},"file"),(0,i.kt)("li",{parentName:"ul"},"folder"),(0,i.kt)("li",{parentName:"ul"},"vector2d"),(0,i.kt)("li",{parentName:"ul"},"vector3d")),(0,i.kt)("h2",{id:"expressions"},"Expressions"),(0,i.kt)("p",null,"Parameters can be assigned fixed values but also mathematical ",(0,i.kt)("em",{parentName:"p"},"expressions"),". Click on a parameter label to change the control to 'Expression'."),(0,i.kt)("p",null,"You can use math functions and arithmetic operations. A popup window will list existing functions."),(0,i.kt)("p",null,"It is important to match the type of value to the parameter type. Still, if you write in a string and the type is float, the value will be converted automatically."),(0,i.kt)("h2",{id:"graph-parameters"},"Graph Parameters"),(0,i.kt)("p",null,'You can also define "global" graph parameters and reference them in the nodes.'),(0,i.kt)("p",null,"You can access them by left-clicking anywhere on the back graph canvas, which will display them in the inspector window. Alternatively, the right-click context menu or the top menu (Graph->Properties) will lead you to the same place."),(0,i.kt)("p",null,"[Image]"," "),(0,i.kt)("p",null,"Parameters are ",(0,i.kt)("em",{parentName:"p"},"immutable"),", meaning that they cannot be changed throughout the graph. They work as global constants that can work as a single point of definition. If you are reusing the same value in several nodes, you could reference a global graph parameter. This way, you could change the actual value in a single location and all its references would be updated."),(0,i.kt)("p",null,"[Image]"),(0,i.kt)("p",null,'When a node parameter is in expression mode, a button with a "+" sign becomes available. This allows the quick creation of a new graph parameter. By default, the popup window that appears will suggest one with the same (or similar) name, type and default value, but you could change these. When accepted, a reference to the parameter will be added to the expression textbox.'),(0,i.kt)("p",null,"[Image]"))}m.isMDXComponent=!0},7302:function(e,t,a){"use strict";t.Z=a.p+"assets/images/ParameterList-926d1c86c1a24b71129a88724f11c5de.png"}}]);