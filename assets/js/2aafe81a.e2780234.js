(self.webpackChunksceelix=self.webpackChunksceelix||[]).push([[2561],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return h}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),h=i,g=d["".concat(s,".").concat(h)]||d[h]||u[h]||o;return n?r.createElement(g,a(a({ref:t},p),{},{components:n})):r.createElement(g,a({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9125:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var r=n(2122),i=n(9756),o=(n(7294),n(3905)),a={},l="Graph Editor",s={unversionedId:"Working With Sceelix/GraphEditor",id:"Working With Sceelix/GraphEditor",isDocsHomePage:!1,title:"Graph Editor",description:"The graph editor is one of the available file editors and one of Sceelix\u2019s core interface element. It is displayed inside the Document Area and handles files with the .slxg extension.",source:"@site/docs/03-Working With Sceelix/05-GraphEditor.md",sourceDirName:"03-Working With Sceelix",slug:"/Working With Sceelix/GraphEditor",permalink:"/docs/Working With Sceelix/GraphEditor",editUrl:"https://github.com/Sceelix/Sceelix/edit/master/website/docs/03-Working With Sceelix/05-GraphEditor.md",version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Document Area",permalink:"/docs/Working With Sceelix/DocumentArea"},next:{title:"Data Explorer",permalink:"/docs/Working With Sceelix/DataExplorer"}},c=[{value:"Controls",id:"controls",children:[]},{value:"Settings",id:"settings",children:[]}],p={toc:c};function u(e){var t=e.components,a=(0,i.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"graph-editor"},"Graph Editor"),(0,o.kt)("p",null,"The graph editor is one of the available file editors and one of Sceelix\u2019s core interface element. It is displayed inside the ",(0,o.kt)("a",{parentName:"p",href:"DocumentArea"},"Document Area")," and handles files with the ",(0,o.kt)("strong",{parentName:"p"},".slxg")," extension."),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(4135).Z})),(0,o.kt)("h2",{id:"controls"},"Controls"),(0,o.kt)("p",null,"This is the control used to view and edit graphs, which appears in the Document Window:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Left-Mouse click:")," Selection of nodes, edges, ports and presentation of graph properties."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Right-Mouse click:")," Context menu for graph and selection."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Middle-Mouse press or Left + Shift while moving mouse:")," Camera panning."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Mouse Scroll Wheel:"),"  Camera zoom in and out."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"F:")," zoom on a node selection or on the full graph (if nothing is selected)."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Alt+Left Mouse click:")," When pressed on edges and ports, toggles between states (enabled, disabled, etc.)")),(0,o.kt)("h2",{id:"settings"},"Settings"),(0,o.kt)("p",null,"You can change the graph editor settings through the graph editor\u2019s menu -> View->Settings. These could also be accessed through the application top-most menu->Application->Settings and looking under Editors->Graph."),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(4321).Z})),(0,o.kt)("p",null,"For now, the following settings are available:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Live Execution:")," If enabled, every change made to a graph being edited will force a graph re-execution. Note that only changes that might contribute to a change in the result will be considered (for instance, changing the label of a node will not trigger an execution). While this option is useful to quickly see the results of the graph being edited, for longer and more work-intensive graphs the process may not be desired, especially if the graph execution becomes more CPU-intensive."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Save on Execution:")," If enabled, the graph will be saved every time, before it is executed. Enabled by default."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Clear Logs on Execution:")," If enabled, all entries in the ",(0,o.kt)("a",{parentName:"li",href:"LogViewer"},"log window")," will be cleared when the graph is executed."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Track Entity Paths:")," If enabled, tracking information about the nodes, edges and ports that an entity has gone through will be registered. This will enable coloring of the nodes that led to creation of a given entity, once it is selected in the ",(0,o.kt)("a",{parentName:"li",href:"DataExplorer"},"Data Explorer")," or any other viewer. This is very useful to understand the nodes that contributed to the creation of an entity, when it is selected, but can carry a significant performance overhead for more complex graphs."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"View Entity Count:")," If enabled, it will show, at each port, how many entities have come in (for input ports) or come out (for output ports) in the last graph execution.")))}u.isMDXComponent=!0},4135:function(e,t,n){"use strict";t.Z=n.p+"assets/images/GraphEditorWindow-2ad533bfd20c55648a07430273b7ca5d.png"},4321:function(e,t,n){"use strict";t.Z=n.p+"assets/images/GraphSettings-54eaa3c3e233d1f3492b6d9af8ee6cc0.png"}}]);