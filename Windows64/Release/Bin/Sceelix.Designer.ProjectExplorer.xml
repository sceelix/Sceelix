<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sceelix.Designer.ProjectExplorer</name>
    </assembly>
    <members>
        <member name="M:Sceelix.Designer.ProjectExplorer.FileHandlers.FileHandlerManager.GetSupportedFileExtensions">
            <summary>
            Provides the file extensions that can be loaded, viewed or manipulated.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.FileHandlers.FileHandlerManager.GetFileHandler(Sceelix.Designer.ProjectExplorer.Management.FileItem)">
            <summary>
            Gets the file handler of the given file.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.FileHandlers.FileHandlerManager.GetDocumentControlForFile(Sceelix.Designer.ProjectExplorer.Management.FileItem,Sceelix.Designer.ProjectExplorer.GUI.DocumentControl)">
            <summary>
            Gets the file editor of the given file.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.FileHandlers.FileHandlerManager.GetIconForFile(Sceelix.Designer.ProjectExplorer.Management.FileItem)">
            <summary>
            Gets the icon to be displayed for this file in the file tree.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.FileHandlers.FileHandlerManager.IsSupported(System.String)">
            <summary>
            Checks if there is a file handler for the file.
            </summary>
            <param name="extension">Extension of the file, with the ".".</param>
            <returns></returns>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.GUI.DocumentControl.AlertFileChange">
            <summary>
            Alert the containing tab that the content has been changed.
            </summary>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.GUI.LogWindow.OnExceptionThrown(Sceelix.Designer.Messaging.ExceptionThrown)">
            <summary>
            Add the message to the textbox, but do it in the main thread.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.GUI.DocumentAreaWindow.IsActivePropertyOnChanged(System.Object,DigitalRune.Game.GamePropertyEventArgs{System.Boolean})">
            <summary>
            When the document area window loses "focus" (i.e. other window is clicked) and gets it again, the current tab should be notified.
            Useful for the graph document window, for instance (for reloading its graph after file moves).
            </summary>
            <param name="sender"></param>
            <param name="gamePropertyEventArgs"></param>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.GUI.DocumentAreaWindow.OnProjectLoaded(Sceelix.Designer.ProjectExplorer.Messages.ProjectLoaded)">
            <summary>
            If a new project is loaded, close all existing tabs.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.GUI.ImportFilesWindow.#ctor(Sceelix.Designer.Services.IServiceLocator,Sceelix.Designer.ProjectExplorer.Management.FolderItem,System.String[])">
            <summary>
            Imports a list of files or folders.
            </summary>
            <param name="services"></param>
            <param name="targetFolderItem"></param>
            <param name="fileOrFolderPaths"></param>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.GUI.ImportFilesWindow.OnLoad">
            <summary>
            Drawing of the window with progressbar and such.
            </summary>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.GUI.ImportFilesWindow.ImportFiles">
            <summary>
            This function is executed in a second thread to not interrupt the main thread
            </summary>
        </member>
        <member name="F:Sceelix.Designer.ProjectExplorer.GUI.ProjectExplorerWindow._openFileDialog">
            <summary>
            A useful tip for fighting the nasty OpenFileDialog hanging behavior: 
            http://wishmesh.com/2011/06/call-to-openfiledialog-or-savefiledialog-hangs-or-freezes/
            - For OpenFileDialog the ShowHelp property must be explicitly set.
            - For SaveFileDialog the ShowHelp, CreatePrompt, and OverwritePrompt properties must be explicitly set.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.ProjectExplorer.GUI.ProjectExplorerWindow._recentMenuItem">
            <summary>
            Menu item that has all recent project references below
            </summary>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.GUI.ProjectExplorerWindow.GetOrderedSelectedItems(Sceelix.Designer.ProjectExplorer.GUI.ProjectTreeItem)">
            <summary>
            This function purposely stops when an item is selected.
            This means that if a folder is selected and a subitem of that folder is too, the subitem will be ignored.
            
            This is useful for drag and dropping and deleting files/folders.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.GUI.ProjectExplorerWindow.FilterSelectedItems(System.Collections.Generic.IEnumerable{Sceelix.Designer.ProjectExplorer.GUI.ProjectTreeItem},Sceelix.Designer.ProjectExplorer.GUI.ProjectTreeItem)">
            <summary>
            This function purposely stops when an item is selected.
            This means that if a folder is selected and a subitem of that folder is too, the subitem will be ignored.
            
            This is useful for drag and dropping and deleting files/folders.
            </summary>
            <param name="selections"></param>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.GUI.ProjectExplorerWindow.CreateNewProject(Sceelix.Designer.GUI.MenuControls.MenuChild)">
            <summary>
            Opens the "New Project" window and creates a new project.
            </summary>
            <param name="menuChild"></param>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.GUI.ProjectExplorerWindow.LoadProject(Sceelix.Designer.ProjectExplorer.Management.Project)">
            <summary>
            Loads the project by instance, adds the items to the tree viewer and warns anyone that may be interested.
            </summary>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.GUI.ProjectExplorerWindow.FolderOnRightClick(System.Object,System.EventArgs)">
            <summary>
            Context menu on folder right-click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.GUI.ProjectExplorerWindow.FileOnRightClick(System.Object,System.EventArgs)">
            <summary>
            Context menu on file right-click
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.Management.FileItem.#ctor(System.String,System.String,Sceelix.Designer.ProjectExplorer.Management.FolderItem)">
            <summary>
            Creates an instance of FileItem with the given name, extension and parent folder item.
            
            Note: this does not add this object as a child of the folder item. That has to be done afterwards, if desired.
            </summary>
            <param name="name"></param>
            <param name="extension"></param>
            <param name="folderItem"></param>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.Management.FileItem.#ctor(System.String,Sceelix.Designer.ProjectExplorer.Management.FolderItem,System.Guid)">
            <summary>
            Creates an instance of FileItem with the given filename, guid and parent folder item.
            
            Note: this does not add this object as a child of the folder item. That has to be done afterwards, if desired.
            </summary>
            <param name="name"></param>
            <param name="extension"></param>
            <param name="folderItem"></param>
        </member>
        <member name="P:Sceelix.Designer.ProjectExplorer.Management.FileItem.Extension">
            <summary>
            Extension of the file, including the "."
            </summary>
        </member>
        <member name="F:Sceelix.Designer.ProjectExplorer.Management.LogSettings.FileLoggingLevel">
            <summary>
            From the log messages that arrive at the log window, this indicator controls which ones
            are persisted to disk (in the log folder). The choices are ordered in the way that each
            level includes the previous ones. For instance, "Warning" includes error and warning messages, 
            while "Debug" includes all message types. As logging to disk can encompass a significant
            overhead, only "Error" messages are considered by default.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.ProjectExplorer.Management.LogSettings.AggregateMessages">
            <summary>
            Indicates if messages with the same content, type and source should be aggregated (whereas the count
            of repeated messages is shown). Spares resources and generally improves readability, but may affect 
            the notion of message order.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.ProjectExplorer.Management.ProjectExplorerSettings.TrackDocumentArea">
            <summary>
            Indicates if the project explorer should focus on the file currently active in the document area.
            </summary>
        </member>
        <member name="P:Sceelix.Designer.ProjectExplorer.Management.ProjectHistorySettings.IsNewVersion">
            <summary>
            Checks (and updates) the version of the last Sceelix version loaded. 
            </summary>
        </member>
        <member name="T:Sceelix.Designer.ProjectExplorer.Management.ProjectItem">
            <summary>
            A project item is some file or folder that can be assigned to a project.
            </summary>
        </member>
        <member name="P:Sceelix.Designer.ProjectExplorer.Management.ProjectItem.FileName">
            <summary>
            File name (with extension, if applicable)
            </summary>
        </member>
        <member name="P:Sceelix.Designer.ProjectExplorer.Management.ProjectItem.Name">
            <summary>
            The name of the file (or folder), without extensions of any sort
            </summary>
        </member>
        <member name="P:Sceelix.Designer.ProjectExplorer.Management.ProjectItem.FullPath">
            <summary>
            The full file path (with extension, if applicable)
            </summary>
        </member>
        <member name="P:Sceelix.Designer.ProjectExplorer.Management.ProjectItem.FullContainerPath">
            <summary>
            The full path of the direttory where the file (or folder) is contained
            </summary>
        </member>
        <member name="P:Sceelix.Designer.ProjectExplorer.Management.ProjectItem.ProjectRelativePath">
            <summary>
            The project relative file path (with extension, if applicable)
            </summary>
        </member>
        <member name="P:Sceelix.Designer.ProjectExplorer.Management.ProjectItem.ProjectRelativeContainerPath">
            <summary>
            The project relative path of the directory where the file (or folder) is contained
            </summary>
        </member>
        <member name="P:Sceelix.Designer.ProjectExplorer.Management.ProjectItem.Nature">
            <summary>
            The type of item being handled ("File" or "Folder")
            </summary>
        </member>
        <member name="M:Sceelix.Designer.ProjectExplorer.Management.ProjectItem.DeleteFromProject">
            <summary>
            Removes himself from the project and filesystem
            </summary>
        </member>
    </members>
</doc>
