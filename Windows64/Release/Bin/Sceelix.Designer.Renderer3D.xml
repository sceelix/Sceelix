<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sceelix.Designer.Renderer3D</name>
    </assembly>
    <members>
        <member name="T:Sceelix.Designer.Renderer3D.GraphicsScreens.DeferredGraphicsDebugMode">
            <summary>
            Debug modes for the <see cref="T:Sceelix.Designer.Renderer3D.GraphicsScreens.DeferredGraphicsScreen"/>.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.GraphicsScreens.DeferredGraphicsDebugMode.None">
            <summary>
            Normal rendering.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.GraphicsScreens.DeferredGraphicsDebugMode.VisualizeDiffuseLightBuffer">
            <summary>
            Render the diffuse light buffer instead of the shaded materials.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.GraphicsScreens.DeferredGraphicsDebugMode.VisualizeSpecularLightBuffer">
            <summary>
            Render the specular light buffer instead of the shaded materials.
            </summary>
        </member>
        <member name="T:Sceelix.Designer.Renderer3D.GraphicsScreens.PreprocessingSceneQuery">
            <summary>
            Collects all scene nodes which need some work done before the actual scene is rendered:
            CloudLayerNodes, WaterNodes, SceneCaptureNodes, PlanarReflectionNodes
            </summary>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GraphicsScreens.PostProcessingGraphicsScreen.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.Translators.EntityTranslatorContainer.GetTranslator(Sceelix.Core.Data.IEntity)">
            <summary>
            Get the entityobjectfactory that can handle this type of entity.
            This is a robust approach, as it allows subclasses of a certain entity to be processed as well.
            For instance, a subclass of "MeshEntity" will be handled by the "MeshEntityObjectFactory", if a more specific
            factory is not available.
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.Data.EntityObjectDomain.Load(DigitalRune.Graphics.SceneGraph.IScene,DigitalRune.Game.IGameObjectService,DigitalRune.Physics.Simulation)">
            <summary>
            This should be run in the main thread.
            </summary>
            <param name="scene"></param>
            <param name="gameObjectManager"></param>
            <param name="collisionObjectPicker"></param>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.Data.EntityObjectDomain.Unload(DigitalRune.Graphics.SceneGraph.IScene,DigitalRune.Game.IGameObjectService,DigitalRune.Physics.Simulation)">
            <summary>
             This should be run in the main thread.
            </summary>
            <param name="scene"></param>
            <param name="gameObjectManager"></param>
            <param name="collisionObjectPicker"></param>
        </member>
        <member name="T:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereNode">
            <summary>
            Describes a sphere of fog.
            </summary>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereNode"/> class.
            </summary>
        </member>
        <member name="P:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereNode.Color">
            <summary>
            Gets or sets the fog color.
            </summary>
            <value>The fog color. The default value is (1, 1, 1).</value>
        </member>
        <member name="P:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereNode.Density">
            <summary>
            Gets or sets the fog density.
            </summary>
            <value>The fog density. The default value is 0.6.</value>
        </member>
        <member name="P:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereNode.BlendMode">
            <summary>
            Gets or sets the blend mode.
            </summary>
            <value>
            The blend mode of the billboard: 0 = additive blending, 1 = alpha blending. Intermediate 
            values between 0 and 1 are allowed. The default value is 0 (additive blending).
            </value>
        </member>
        <member name="P:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereNode.Falloff">
            <summary>
            Gets or sets the falloff of the fog intensity.
            </summary>
            <value>
            The falloff of the fog intensity. Use 1 to create fog that is linear relative to the
            distance traveled inside the fog. Use values greater than 1 to create non-linear fog.
            </value>
        </member>
        <member name="P:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereNode.IntersectionSoftness">
            <summary>
            Gets or sets the intersection softness.
            </summary>
            <value>The intersection softness. The default value is 1.</value>
            <remarks>
            The fog effect fades out when the fog is intersected by geometry. This avoids
            sharp fog edges at the front side of the fog sphere. The fade out effect depends on the 
            distance from the water surface to the geometry. The <see cref="P:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereNode.IntersectionSoftness"/> 
            defines the distance where the fog effect fades out.  If <see cref="P:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereNode.IntersectionSoftness"/> 
            is 1, the fog is fully visible when the distance to the geometry is 1 world space unit.
            </remarks>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereNode.Clone">
            <inheritdoc cref="M:DigitalRune.Graphics.SceneGraph.SceneNode.Clone" />
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereNode.CreateInstanceCore">
            <inheritdoc />
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereNode.CloneCore(DigitalRune.Graphics.SceneGraph.SceneNode)">
            <inheritdoc />
        </member>
        <member name="T:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereRenderer">
            <summary>
            Renders <see cref="T:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereNode"/>s into the current render target.
            </summary>
            <remarks>
            <para>
            <strong>Render Target and Viewport:</strong><br/>
            This renderer renders into the current render target and viewport of the graphics device.
            </para>
            </remarks>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereRenderer.#ctor(DigitalRune.Graphics.IGraphicsService)">
            <summary>
            Initializes a new instance of the <see cref="T:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereRenderer"/> class.
            </summary>
            <param name="graphicsService">The graphics service.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="graphicsService"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereRenderer.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereRenderer.CanRender(DigitalRune.Graphics.SceneGraph.SceneNode,DigitalRune.Graphics.RenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.FogSphere.FogSphereRenderer.Render(System.Collections.Generic.IList{DigitalRune.Graphics.SceneGraph.SceneNode},DigitalRune.Graphics.RenderContext,DigitalRune.Graphics.Rendering.RenderOrder)">
            <inheritdoc/>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.CameraObject.AnimateCameraTo(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Starts a camera animation to a certain matrix tranformation
            </summary>
            <param name="targetTransform"></param>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.DynamicSkyObject.CreateScale(System.Single)">
            <summary>
            Creates the texture matrix for scaling texture coordinates.
            </summary>
            <param name="s">The uniform scale factor.</param>
            <returns>The texture matrix.</returns>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.DynamicSkyObject.CreateScale(System.Single,System.Single)">
            <summary>
            Creates the texture matrix for scaling the texture coordinates.
            </summary>
            <param name="su">The scale factor for u texture coordinates.</param>
            <param name="sv">The scale factor for v texture coordinates.</param>
            <returns>The texture matrix.</returns>
        </member>
        <member name="T:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightNode">
            <summary>
            Represents a volumetric light effect (light shafts) for a single light.
            </summary>
            <remarks>
            Simply add the node to the children of LightNode. The light type must be 
            <see cref="T:DigitalRune.Graphics.PointLight"/>, <see cref="T:DigitalRune.Graphics.Spotlight"/> or <see cref="T:DigitalRune.Graphics.ProjectorLight"/>.
            </remarks>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightNode"/> class.
            </summary>
        </member>
        <member name="P:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightNode.Color">
            <summary>
            Gets or sets the color (tint color and effect intensity).
            </summary>
            <value>The color (tint color and effect intensity). The default value is (1, 1, 1).</value>
        </member>
        <member name="P:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightNode.NumberOfSamples">
            <summary>
            Gets or sets the number of samples.
            </summary>
            <value>The number of samples. The default value is 10.</value>
        </member>
        <member name="P:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightNode.MipMapBias">
            <summary>
            Gets or sets the mipmap bias.
            </summary>
            <value>The mipmap bias. The default value is 0.</value>
            <remarks>
            Use <see cref="P:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightNode.MipMapBias"/> greater than 0 to sample a higher (= lower resolution) mipmap
            level of the light texture.
            </remarks>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightNode.Clone">
            <inheritdoc cref="M:DigitalRune.Graphics.SceneGraph.SceneNode.Clone" />
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightNode.CreateInstanceCore">
            <inheritdoc />
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightNode.CloneCore(DigitalRune.Graphics.SceneGraph.SceneNode)">
            <inheritdoc />
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightNode.OnParentChanged(DigitalRune.Graphics.SceneGraph.SceneNode,DigitalRune.Graphics.SceneGraph.SceneNode)">
            <inheritdoc/>
        </member>
        <member name="T:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightRenderer">
            <summary>
            Renders <see cref="T:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightNode"/>s into the current render target.
            </summary>
            <remarks>
            <para>
            Volumetric lights are created using raymarching in the shader: The shader computes the light
            intensities at several position along the view ray (within the camera space AABB of the light)
            and additively blends the result to the scene.
            </para>
            <para>
            <strong>Off-Screen Rendering:</strong><br/>
            Large amounts of volumetric lights or a high number of samples per light can reduce
            the frame rate, if the game is limited by the GPU's fill rate. One solution to this problem
            is to render volumetric lights into a low-resolution off-screen buffer. This reduces the
            amount of work per pixel, at the expense of additional image processing overhead and image
            quality.
            </para>
            <para>
            To enable off-screen rendering set the property <see cref="P:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightRenderer.EnableOffscreenRendering"/> to
            <see langword="true"/>. In addition a low-resolution copy of the depth buffer (half width and
            height) needs to be stored in <c>renderContext.Data[RenderContextKey.DepthBufferHalf]</c>.
            </para>
            <para>
            In XNA off-screen rendering clears the current back buffer. If necessary the renderer will
            automatically rebuild the back buffer including the depth buffer. For the rebuild step it will
            use the same parameters (e.g. near and far bias) as the current
            <see cref="T:DigitalRune.Graphics.Rendering.RebuildZBufferRenderer"/> stored in
            <c>renderContext.Data[RenderContextKey.RebuildZBufferRenderer]</c>.
            </para>
            <note type="warning">
            When off-screen rendering is enabled the <see cref="T:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightRenderer"/> automatically 
            switches render targets and invalidates the current depth-stencil buffer.
            </note>
            </remarks>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightRenderer.#ctor(DigitalRune.Graphics.IGraphicsService)">
            <summary>
            Initializes a new instance of the <see cref="T:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightRenderer"/> class.
            </summary>
            <param name="graphicsService">The graphics service.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="graphicsService"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightRenderer.BlendStateOffscreen">
            <summary>
            The blend state for rendering volumetric effects into the off-screen buffer.
            </summary>
        </member>
        <member name="P:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightRenderer.AnimateNoise">
            <summary>
            Gets or sets a value indicating whether noise is animated.
            </summary>
            <value>
            <see langword="true" /> if noise is animated; otherwise, <see langword="false" />.
            </value>
            <remarks>
            The effect uses noise to hide banding caused by a low number of samples.
            </remarks>
        </member>
        <member name="P:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightRenderer.EnableOffscreenRendering">
            <summary>
            Gets or sets a value indicating whether off-screen rendering is enabled.
            </summary>
            <value>
            <see langword="true"/> if volumetric lights are rendered into an off-screen buffer;
            otherwise, <see langword="false"/>. The default value is <see langword="false"/>.
            </value>
            <remarks>
            <para>
            When <see cref="P:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightRenderer.EnableOffscreenRendering"/> is set, all volumetric lights are rendered into
            a low-resolution off-screen buffer. The final off-screen buffer is upscaled and combined
            with the scene.
            </para>
            <para>
            This option should be enabled if the amount of volumetric lights and/or the number of
            samples per volumetric light causes a frame rate drop.
            </para>
            <para>
            <strong>Important:</strong> A downsampled version of the depth buffer (half width and
            height) needs to be stored in <c>renderContext.Data[RenderContextKey.DepthBufferHalf]</c>.
            </para>
            <para>
            When off-screen rendering is used, the hardware depth buffer information is lost. This
            renderer restores the depth buffer when it combines the off-screen buffer with the render
            target in the final step. The restored depth buffer is not totally accurate.
            For the rebuild step the renderer will use the same parameters (e.g. near and far bias) as 
            the current <see cref="T:DigitalRune.Graphics.Rendering.RebuildZBufferRenderer"/> stored in 
            <c>renderContext.Data[RenderContextKey.RebuildZBufferRenderer]</c>.
            </para>
            </remarks>
        </member>
        <member name="P:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightRenderer.DepthThreshold">
            <summary>
            Gets or sets the depth threshold used for edge detection when upsampling the off-screen
            buffer.
            </summary>
            <value>The depth threshold in world space units. The default value is 1 unit.</value>
            <remarks>
            <para>
            When off-screen rendering is enabled (see <see cref="P:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightRenderer.EnableOffscreenRendering"/>), the
            renderer uses bilinear interpolation when upsampling the off-screen buffer, except for edges
            where nearest-depth upsampling is used. The <see cref="P:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightRenderer.DepthThreshold"/> is the threshold
            value used for edge detection.
            </para>
            <para>
            In general: A large depth threshold improves image quality, but can cause edge artifacts. A
            small depth threshold improves the quality at geometry edges, but may reduce quality at 
            non-edges.
            </para>
            </remarks>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightRenderer.CanRender(DigitalRune.Graphics.SceneGraph.SceneNode,DigitalRune.Graphics.RenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.GameObjects.VolumetricLight.VolumetricLightRenderer.Render(System.Collections.Generic.IList{DigitalRune.Graphics.SceneGraph.SceneNode},DigitalRune.Graphics.RenderContext,DigitalRune.Graphics.Rendering.RenderOrder)">
            <inheritdoc/>
        </member>
        <member name="M:Sceelix.Designer.Renderer3D.Loading.ContentLoader.LoadTexture(System.String)">
            <summary>
            Loads the texture.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="T:Sceelix.Designer.Renderer3D.Loading.TextureLoader">
            <summary>
            Based on http://jakepoz.com/jake_poznanski__background_load_xna.html 
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Renderer3DSettings.ShowAxis">
            <summary>
            Toggles axis arrow drawing on the world's origin (0,0,0).
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Renderer3DSettings.ShowGround">
            <summary>
            Toggles the ground plane, located at Z = 0.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Renderer3DSettings.ShowFaceEdges">
            <summary>
            Toggles edges drawing of mesh polygons.
            This is useful to better understand the boundaries of each polygon, but can carry a significant 
            rendering overhead for more larger result sets.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Renderer3DSettings.ShowPathConnectivity">
            <summary>
            Toggles vertex connectivity information in path vertices.
            This is useful to better understand the connectivity for each vertex, but may hard to visualize, 
            if many vertices are displayed.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Renderer3DSettings.ShowPathDirection">
            <summary>
            Toggles edge direction information in path vertices.
            This is useful to better understand the source and target vertex of each edge.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Renderer3DSettings.InvertLook">
            <summary>
            Inverts mouse camera movement.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Renderer3DSettings.MouseSpeed">
            <summary>
            Defines how fast the camera orientation changes (using the mouse).
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Renderer3DSettings.WalkingSpeed">
            <summary>
            Defines how fast the camera position changes (using the keyboard) .
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Renderer3DSettings.FrameNewData">
            <summary>
            Determines if the camera should zoom on the results of a new source/graph.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Renderer3DSettings.Edge">
            <summary>
            Toggles the edge filter on the 3D View, which highlights silhouette and crease edges.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Renderer3DSettings.Ssao">
            <summary>
            Toggles Screen Space Ambient Occlusion (SSAO) filter on the 3D View.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Renderer3DSettings.Fxaa">
            <summary>
            Toggles the Fast Approximate Anti-Aliasing technique on the 3D View, reducing image aliasing.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Renderer3DSettings.Smaa">
            <summary>
            Toggles the Enhanced Subpixel Morphological Anti-Aliasing on the 3D View, reducing image aliasing.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Renderer3DSettings.Vignette">
            <summary>
            Toggles a Vignette Image effect.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Sky3DSettings.EnableSky">
            <summary>
            Toggles the sky box.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Sky3DSettings.EnableClouds">
            <summary>
            Toggles cloud rendering on sky box.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Sky3DSettings.CloudSeed">
            <summary>
            Random look of the skybox clouds, if enabled.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Sky3DSettings.EnableCloudShadows">
            <summary>
            Toggles cloud shadow effects from the skybox clouds, if enabled.
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Sky3DSettings.Hour">
            <summary>
            Determines the time of day (the hours), affecting sun and light position and direction.
            Only applicable if the sky is enabled. 
            </summary>
        </member>
        <member name="F:Sceelix.Designer.Renderer3D.Settings.Sky3DSettings.Minutes">
            <summary>
            Determines the time of day when (the minutes), affecting sun and light position and direction.
            Only applicable if the sky is enabled. 
            </summary>
        </member>
    </members>
</doc>
